// <auto-generated />
using System;
using HP_Project.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HP_Project.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HP_Project.DAL.Models.ApolloRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountNameLatin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountSTID")
                        .HasColumnType("int");

                    b.Property<string>("AccountSTName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccountSubType")
                        .HasColumnType("int");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<int>("BusinessRelationshipID")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustrySegment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IndustryVertical")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OPSIID")
                        .HasColumnType("int");

                    b.Property<int>("OrganizationID")
                        .HasColumnType("int");

                    b.Property<string>("PRMID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartialAccountSTID")
                        .HasColumnType("int");

                    b.Property<string>("PartialAccountSTName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrivateAccount")
                        .HasColumnType("bit");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("SubRegion1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TopParentSTID")
                        .HasColumnType("int");

                    b.Property<string>("TopParentSTName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Apollo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountNameLatin = "Ah Development",
                            AccountSTID = 225954,
                            AccountSubType = 0,
                            AccountType = 0,
                            BusinessRelationshipID = 0,
                            MyProperty = 0,
                            Name = "Ah Development",
                            OPSIID = 0,
                            OrganizationID = 0,
                            PartialAccountSTID = 0,
                            PrivateAccount = false,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            AccountNameLatin = "Adobe Systems Belgium BVBA",
                            AccountSTID = 0,
                            AccountSubType = 0,
                            AccountType = 0,
                            BusinessRelationshipID = 0,
                            MyProperty = 0,
                            Name = "Adobe Systems Belgium BVBA",
                            OPSIID = 0,
                            OrganizationID = 0,
                            PartialAccountSTID = 0,
                            PrivateAccount = false,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            AccountNameLatin = "BELGACOM",
                            AccountSTID = 0,
                            AccountSubType = 0,
                            AccountType = 0,
                            BusinessRelationshipID = 0,
                            MyProperty = 0,
                            Name = "BELGACOM",
                            OPSIID = 0,
                            OrganizationID = 0,
                            PartialAccountSTID = 0,
                            PrivateAccount = false,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            AccountNameLatin = "Machiels Building solutions",
                            AccountSTID = 0,
                            AccountSubType = 0,
                            AccountType = 0,
                            BusinessRelationshipID = 0,
                            MyProperty = 0,
                            Name = "Machiels Building solutions",
                            OPSIID = 0,
                            OrganizationID = 0,
                            PartialAccountSTID = 0,
                            PrivateAccount = false,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            AccountNameLatin = "Henco Industries",
                            AccountSTID = 0,
                            AccountSubType = 0,
                            AccountType = 0,
                            BusinessRelationshipID = 0,
                            MyProperty = 0,
                            Name = "Henco Industries",
                            OPSIID = 0,
                            OrganizationID = 0,
                            PartialAccountSTID = 0,
                            PrivateAccount = false,
                            Status = 0
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "42925b4b-11b3-453e-9078-849701c26242",
                            Email = "annick.verscheuren@hptest.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEBFD/mzYDUJIbacSc4JjveEuqc8eG/V2a1Zwl2L90szemfF7x/Dni6MATosSOKstTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ec52066d-4298-464e-bc81-adefd13cd570",
                            TwoFactorEnabled = false,
                            UserName = "Annick Verscheuren"
                        },
                        new
                        {
                            Id = "2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5814ff5f-11d0-409b-9fc4-b0a8c073020d",
                            Email = "koen.vanbeneden@hptest.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEBFD/mzYDUJIbacSc4JjveEuqc8eG/V2a1Zwl2L90szemfF7x/Dni6MATosSOKstTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "954216a6-3756-4abd-92e6-b99901f65c37",
                            TwoFactorEnabled = false,
                            UserName = "Koen Van Beneden"
                        },
                        new
                        {
                            Id = "3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2db5a959-ad01-4f07-970c-edfd0554a963",
                            Email = "jan.das@hptest.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PasswordHash = "AQAAAAEAACcQAAAAEBFD/mzYDUJIbacSc4JjveEuqc8eG/V2a1Zwl2L90szemfF7x/Dni6MATosSOKstTQ==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d49c44a2-42eb-434c-84fd-fcad9fb0be5f",
                            TwoFactorEnabled = false,
                            UserName = "Jan Das"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.ClientEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountEmployee")
                        .HasColumnType("int");

                    b.Property<double>("ITspendByYear")
                        .HasColumnType("float");

                    b.Property<int>("SalesTerritoryId")
                        .HasColumnType("int");

                    b.Property<string>("SalesTerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClientEmployees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountEmployee = 160000,
                            ITspendByYear = 9280000.0,
                            SalesTerritoryId = 225954,
                            SalesTerritoryName = "A. DEVELOPMENT - BE"
                        },
                        new
                        {
                            Id = 2,
                            AmountEmployee = 50,
                            ITspendByYear = 22050.0,
                            SalesTerritoryId = 226950,
                            SalesTerritoryName = "ADOBE SYSTEMS BENELUX - BE"
                        },
                        new
                        {
                            Id = 3,
                            AmountEmployee = 1000,
                            ITspendByYear = 53960.0,
                            SalesTerritoryId = 238502,
                            SalesTerritoryName = "PROXIMUS - BE"
                        },
                        new
                        {
                            Id = 4,
                            AmountEmployee = 293,
                            ITspendByYear = 29890.0,
                            SalesTerritoryId = 700005236,
                            SalesTerritoryName = "GROUP MACHIELS NV - BE"
                        },
                        new
                        {
                            Id = 5,
                            AmountEmployee = 160,
                            ITspendByYear = 53600.0,
                            SalesTerritoryId = 700013305,
                            SalesTerritoryName = "HENCO NV - BE"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CIOCircle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InnovationForum")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Mkt")
                        .HasColumnType("bit");

                    b.Property<long>("Phone")
                        .HasColumnType("bigint");

                    b.Property<string>("PostalAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TAC")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "1",
                            CIOCircle = "",
                            Comments = "",
                            Email = "jos@axa.be",
                            FirstName = "Jos",
                            InnovationForum = false,
                            LastName = "De Bosvos",
                            Mkt = true,
                            Phone = 32477901011L,
                            PostalAddress = "Abcde",
                            Role = "IT director",
                            TAC = true
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "2",
                            CIOCircle = "nominated",
                            Comments = "",
                            Email = "freddy@axa.be",
                            FirstName = "Freddy",
                            InnovationForum = false,
                            LastName = "De Zoetwatervis",
                            Mkt = false,
                            Phone = 32477901012L,
                            PostalAddress = "Abcde",
                            Role = "CIO",
                            TAC = false
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = "1",
                            CIOCircle = "",
                            Comments = "",
                            Email = "willy@axa.be",
                            FirstName = "Willy",
                            InnovationForum = true,
                            LastName = "Willems",
                            Mkt = false,
                            Phone = 32477901013L,
                            PostalAddress = "Abcde",
                            Role = "Device Manager",
                            TAC = false
                        },
                        new
                        {
                            Id = 4,
                            ApplicationUserId = "3",
                            CIOCircle = "",
                            Comments = "",
                            Email = "kenny@axa.be",
                            FirstName = "Kenny",
                            InnovationForum = true,
                            LastName = "Kenens",
                            Mkt = false,
                            Phone = 32477901014L,
                            PostalAddress = "Abcde",
                            Role = "Image creator",
                            TAC = true
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Insight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Client")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Insights");
                });

            modelBuilder.Entity("HP_Project.DAL.Models.InstallBase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Apple")
                        .HasColumnType("int");

                    b.Property<int>("Dell")
                        .HasColumnType("int");

                    b.Property<int>("Hp")
                        .HasColumnType("int");

                    b.Property<int>("Msi")
                        .HasColumnType("int");

                    b.Property<int>("SalesTerritoryId")
                        .HasColumnType("int");

                    b.Property<int>("Samsung")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("InstallBase");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apple = 2,
                            Dell = 10,
                            Hp = 2,
                            Msi = 7,
                            SalesTerritoryId = 225954,
                            Samsung = 2
                        },
                        new
                        {
                            Id = 2,
                            Apple = 7,
                            Dell = 3,
                            Hp = 8,
                            Msi = 9,
                            SalesTerritoryId = 226950,
                            Samsung = 1
                        },
                        new
                        {
                            Id = 3,
                            Apple = 1,
                            Dell = 4,
                            Hp = 6,
                            Msi = 8,
                            SalesTerritoryId = 238502,
                            Samsung = 7
                        },
                        new
                        {
                            Id = 4,
                            Apple = 5,
                            Dell = 6,
                            Hp = 4,
                            Msi = 1,
                            SalesTerritoryId = 700005236,
                            Samsung = 3
                        },
                        new
                        {
                            Id = 5,
                            Apple = 7,
                            Dell = 7,
                            Hp = 5,
                            Msi = 4,
                            SalesTerritoryId = 700013305,
                            Samsung = 9
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.ProductHierarchy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L2Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L3Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L4Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L5Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("L6Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductHierarchy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BaCode = "5T00",
                            L2Description = "Print",
                            L3Description = "Office Printing Solutions",
                            L4Description = "OPS Supplies",
                            L5Description = "A4 Value LaserJet Supplies",
                            L6Description = "A4 Value LaserJet C-SKU Supplies",
                            PlCode = "5T"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.RAD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountStId")
                        .HasColumnType("int");

                    b.Property<string>("CustSegCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HpSow")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfEmployees")
                        .HasColumnType("int");

                    b.Property<string>("PcFrameName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcFrameRadFinal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PcTam")
                        .HasColumnType("float");

                    b.Property<string>("SalesLetterName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopSalesTerritoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vertical")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RAD");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountStId = 225954,
                            CustSegCode = "SMB",
                            HpSow = 0.0,
                            NumberOfEmployees = 1,
                            PcFrameName = "-",
                            PcFrameRadFinal = "MM - A1",
                            PcTam = 97.058823529411796,
                            SalesLetterName = "A. DEVELOPMENT - BE",
                            TopSalesTerritoryName = "COMPUDRUG SA - WW",
                            Vertical = "MANUFACTURING"
                        },
                        new
                        {
                            Id = 2,
                            AccountStId = 226950,
                            CustSegCode = "CORPORATE",
                            HpSow = 0.0,
                            NumberOfEmployees = 11,
                            PcFrameName = "-",
                            PcFrameRadFinal = "CEP - A1",
                            PcTam = 1598.23529411765,
                            SalesLetterName = "ADOBE SYSTEMS BENELUX - BE",
                            TopSalesTerritoryName = "ADOBE SYSTEMS INCORPORATED - WW",
                            Vertical = "CONSULTING"
                        },
                        new
                        {
                            Id = 3,
                            AccountStId = 238502,
                            CustSegCode = "CORPORATE",
                            HpSow = 33.0,
                            NumberOfEmployees = 13209,
                            PcFrameName = "-",
                            PcFrameRadFinal = "CEP - D3",
                            PcTam = 3176470.5882352898,
                            SalesLetterName = "PROXIMUS - BE",
                            TopSalesTerritoryName = "PROXIMUS SA - WW",
                            Vertical = "TELCO"
                        },
                        new
                        {
                            Id = 4,
                            AccountStId = 700005236,
                            CustSegCode = "SMB",
                            HpSow = 0.0,
                            NumberOfEmployees = 222,
                            PcFrameName = "-",
                            PcFrameRadFinal = "MM - A1",
                            PcTam = 11707.352941176499,
                            SalesLetterName = "GROUP MACHIELS NV - BE",
                            TopSalesTerritoryName = "-",
                            Vertical = "MANUFACTURING"
                        },
                        new
                        {
                            Id = 5,
                            AccountStId = 700013305,
                            CustSegCode = "SMB",
                            HpSow = 18.0,
                            NumberOfEmployees = 240,
                            PcFrameName = "-",
                            PcFrameRadFinal = "MM - A2",
                            PcTam = 20588.2352941176,
                            SalesLetterName = "HENCO NV - BE",
                            TopSalesTerritoryName = "-",
                            Vertical = "MANUFACTURING"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.RevenueActuals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Amid2Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessUnitL5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClassCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CosKSadj")
                        .HasColumnType("float");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Dataflow")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DealId")
                        .HasColumnType("int");

                    b.Property<string>("EndCustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FulfillmentModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("PsoacMcCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Quarter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RevKSadj")
                        .HasColumnType("float");

                    b.Property<string>("SalesChannelName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubBusinessGroupL3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Units")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RevenueActuals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amid2Customer = "",
                            Ba = "5T00",
                            BusinessUnitL5 = "Commercial Notebooks",
                            ClassCode = "GMN",
                            CosKSadj = 0.0,
                            Country = "Belgium",
                            Dataflow = "Cash Discount_Claims",
                            DealId = 0,
                            EndCustomerName = "Bocimar International",
                            FulfillmentModel = "?",
                            Month = 201611,
                            PsoacMcCode = "AA9R",
                            Quarter = "2017Q1",
                            RevKSadj = -0.0015127456932420801,
                            SalesChannelName = "Mid Market",
                            SubBusinessGroupL3 = "Business PC Solutions",
                            Units = 0,
                            Year = 2017
                        },
                        new
                        {
                            Id = 2,
                            Amid2Customer = "",
                            Ba = "TA00",
                            BusinessUnitL5 = "Mobile Workstations",
                            ClassCode = "GSM",
                            CosKSadj = 2.0,
                            Country = "Belgium",
                            Dataflow = "Transactions",
                            DealId = 0,
                            EndCustomerName = "Belgacom",
                            FulfillmentModel = "STM",
                            Month = 201710,
                            PsoacMcCode = "Y72A",
                            Quarter = "2017Q4",
                            RevKSadj = 40.0,
                            SalesChannelName = "VAR",
                            SubBusinessGroupL3 = "Business PC Solutions",
                            Units = 115,
                            Year = 2017
                        },
                        new
                        {
                            Id = 3,
                            Amid2Customer = "",
                            Ba = "DG00",
                            BusinessUnitL5 = "Commercial Desktops",
                            ClassCode = "PUBL",
                            CosKSadj = 3.0,
                            Country = "Belgium",
                            Dataflow = "Transactions",
                            DealId = 41402383,
                            EndCustomerName = "Real Estate and Leasing Company",
                            FulfillmentModel = "?",
                            Month = 201807,
                            PsoacMcCode = "Y2MA",
                            Quarter = "2018Q3",
                            RevKSadj = 37.0,
                            SalesChannelName = "Distributor Code",
                            SubBusinessGroupL3 = "Business PC Solutions",
                            Units = 70,
                            Year = 2018
                        },
                        new
                        {
                            Id = 4,
                            Amid2Customer = "",
                            Ba = "MP00",
                            BusinessUnitL5 = "Commercial Accessories",
                            ClassCode = "PUBL",
                            CosKSadj = 2.0,
                            Country = "Belgium",
                            Dataflow = "Transactions",
                            DealId = 41113723,
                            EndCustomerName = "Brands in Motion",
                            FulfillmentModel = "STM",
                            Month = 201812,
                            PsoacMcCode = "Y72A",
                            Quarter = "2019Q1",
                            RevKSadj = 30.0,
                            SalesChannelName = "VAR",
                            SubBusinessGroupL3 = "Business PC Solutions",
                            Units = 0,
                            Year = 2019
                        },
                        new
                        {
                            Id = 5,
                            Amid2Customer = "",
                            Ba = "AN00",
                            BusinessUnitL5 = "Commercial Notebooks",
                            ClassCode = "GSM",
                            CosKSadj = 1.0,
                            Country = "Belgium",
                            Dataflow = "Transactions",
                            DealId = 0,
                            EndCustomerName = "Van Hecke Dirk",
                            FulfillmentModel = "?",
                            Month = 201709,
                            PsoacMcCode = "YA9A",
                            Quarter = "2017Q4",
                            RevKSadj = 23.0,
                            SalesChannelName = "Mid Market",
                            SubBusinessGroupL3 = "Business PC Solutions",
                            Units = 24,
                            Year = 2017
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.TerritoryCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmountDesktop")
                        .HasColumnType("int");

                    b.Property<int>("AmountLaptop")
                        .HasColumnType("int");

                    b.Property<int>("AmountThinClient")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstallBaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstallBaseId");

                    b.ToTable("TerritoryCompany");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AmountDesktop = 270,
                            AmountLaptop = 87,
                            AmountThinClient = 6,
                            CompanyId = 225954,
                            CompanyName = "A. DEVELOPMENT - BE"
                        },
                        new
                        {
                            Id = 2,
                            AmountDesktop = 123,
                            AmountLaptop = 81,
                            AmountThinClient = 7,
                            CompanyId = 226950,
                            CompanyName = "ADOBE SYSTEMS BENELUX - BE"
                        },
                        new
                        {
                            Id = 3,
                            AmountDesktop = 54,
                            AmountLaptop = 752,
                            AmountThinClient = 45,
                            CompanyId = 238502,
                            CompanyName = "PROXIMUS - BE"
                        },
                        new
                        {
                            Id = 4,
                            AmountDesktop = 524,
                            AmountLaptop = 95,
                            AmountThinClient = 44,
                            CompanyId = 700005236,
                            CompanyName = "GROUP MACHIELS NV - BE"
                        },
                        new
                        {
                            Id = 5,
                            AmountDesktop = 78,
                            AmountLaptop = 54,
                            AmountThinClient = 4,
                            CompanyId = 700013305,
                            CompanyName = "HENCO NV - BE"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Touchpoint", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Reminder")
                        .HasColumnType("datetime2");

                    b.Property<string>("SortOfEvent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("ContactId");

                    b.ToTable("Touchpoints");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApplicationUserId = "1",
                            ContactId = 1,
                            Date = new DateTime(2018, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "New RFP for Notebooks and desktops (old RFP ends 6/18)",
                            Reminder = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SortOfEvent = "RFP"
                        },
                        new
                        {
                            Id = 2,
                            ApplicationUserId = "1",
                            ContactId = 1,
                            Date = new DateTime(2018, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Plan roadmap update",
                            Reminder = new DateTime(2017, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SortOfEvent = "meeting"
                        },
                        new
                        {
                            Id = 3,
                            ApplicationUserId = "2",
                            ContactId = 2,
                            Date = new DateTime(2016, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Roadmap update 2016 - interested in Elitebook 840/850 and Elite x3",
                            Reminder = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SortOfEvent = "meeting"
                        },
                        new
                        {
                            Id = 4,
                            ApplicationUserId = "3",
                            ContactId = 3,
                            Date = new DateTime(2016, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Intro mailer Elite x3 - opened and followed link to landing page",
                            Reminder = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SortOfEvent = "Marketing email"
                        },
                        new
                        {
                            Id = 5,
                            ApplicationUserId = "2",
                            ContactId = 4,
                            Date = new DateTime(2016, 6, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Elite x3 CIO event - interested in MFP renewal and DaaS",
                            Reminder = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SortOfEvent = "Event"
                        });
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Workday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountStId")
                        .HasColumnType("int");

                    b.Property<string>("FsrPc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsrPc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PcHunter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesLetterName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Workday");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccountStId = 225954,
                            FsrPc = "-",
                            IsrPc = "-",
                            PcHunter = "-",
                            SalesLetterName = "A. DEVELOPMENT - BE"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Contact", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Contacts")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("HP_Project.DAL.Models.TerritoryCompany", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.InstallBase", null)
                        .WithMany("Companies")
                        .HasForeignKey("InstallBaseId");
                });

            modelBuilder.Entity("HP_Project.DAL.Models.Touchpoint", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Touchpoints")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HP_Project.DAL.Models.Contact", "Contact")
                        .WithMany("Touchpoints")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("HP_Project.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
